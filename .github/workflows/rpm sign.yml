name: Hello rpn sign

on:
  workflow_dispatch:
  workflow_call:
  push:

env:
  TAG: "${{ github.ref_name }}"
  BUILD_NUMBER: "${{ github.run_number }}"


jobs:         
  build_rpm:
    name: Build .rpm package
    runs-on: ubuntu-latest
    permissions:
      contents: write
 
    steps:
      - name: INSTALL tools & Prepare build
        run: |
          pwd 
          sudo apt install -y rpm gpg
          wget https://rpmfind.net/linux/fedora/linux/development/rawhide/Everything/x86_64/os/Packages/c/cowsay-3.7.0-8.fc39.noarch.rpm
          ls -la
          
      - name: Creat gpg sign
        run: |
          pwd # /home/runner/work/born_to_be_root/born_to_be_root
          cat << EOF >> GPG-sign
          Key-Type: RSA
          Key-Length: 4096
          Name-Real: Elbakyan-Shirak
          Name-Email: el.shirak@internet.com
          Expire-Date: 0
          Passphrase: 42*Hello_I-love-you!1337
          %commit
          %echo Done
          EOF
          
          gpg --batch --gen-key --no-tty GPG-sign
          gpg --list-keys
          gpg --export --armor --output GPG-signOUT el.shirak@internet.com
          cat GPG-signOUT
          sudo rpm --import GPG-signOUT
          # rpm -qa | grep -i gpg 
          echo "hui"
          # rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
          cd ~ && pwd 
        
          echo "%_signature gpg" >> ~/.rpmmacros
          echo "%_gpg_path ~/.gnupg" >> ~/.rpmmacros
          echo "%_gpg_name Elbakyan-Shirak" >> ~/.rpmmacros
          echo "%__gpg /usr/bin/gpg" >> ~/.rpmmacros
          
          export GPG_TTY=$(tty)
          # GPG_TTY=$TTY sudo rpm --addsign
          cd /home/runner/work/born_to_be_root/born_to_be_root
          pwd
          ls -la 
          # rpm --checksig cowsay-3.7.0-8.fc39.noarch.rpm
          rpm --addsign cowsay-3.7.0-8.fc39.noarch.rpm
          rpm --checksig cowsay-3.7.0-8.fc39.noarch.rpm
          
          
          
      - name: Get variables
        id: get_vars
        run: |
          echo "PRODUCT=$(echo "${{ github.event.repository.name }}" |  tr '[:upper:]' '[:lower:]' )" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo "${GITHUB_REF##*/}" | tr -d '[:alpha:]' )" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "SOURCE_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT
    
    
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: "${{ steps.get_vars.outputs.BRANCH_NAME }}"
          tag: "${{ steps.get_vars.outputs.VERSION }}-${{ env.BUILD_NUMBER }}"
          name: DocSpace packeges release "${{ env.BUILD_NUMBER }}"
          body: Here you may find packages for DocSpace
            - .RPM
            - .DEB
          artifacts: /home/runner/work/DocSpace/DocSpace/build/install/rpm/SPECS/RPMS/x86_64/*.rpm
